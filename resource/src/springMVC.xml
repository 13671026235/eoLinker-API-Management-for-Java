<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	
    <context:annotation-config/>
    <context:component-scan base-package="com.eolinker.controller">
          <context:include-filter type="annotation" 
          expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
     <context:component-scan base-package="com.eolinker.exception">
          <context:include-filter type="annotation"
            expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>
     <mvc:annotation-driven >
       <mvc:message-converters register-defaults="true">
          <bean class="org.springframework.http.converter.StringHttpMessageConverter">
             <property name="supportedMediaTypes" value="text/plain;charset=UTF-8" />
          </bean>
       </mvc:message-converters>   
    </mvc:annotation-driven>
    
    <mvc:default-servlet-handler />
    <mvc:interceptors>   
        <mvc:interceptor>   
            <mvc:mapping path= "/**" /> 
            <mvc:exclude-mapping path="/Guest/**" />
            <mvc:exclude-mapping path="/Setting/**" />
            <mvc:exclude-mapping path="/Mock/**" />
            <mvc:exclude-mapping path="/*.html" />
            <mvc:exclude-mapping path="/assets/**" />
            <mvc:exclude-mapping path="/scripts/**" />
            <mvc:exclude-mapping path="/styles/**" />
            <mvc:exclude-mapping path="/vendor/**" />
            <mvc:exclude-mapping path="/libs/**" />
             <mvc:exclude-mapping path="/dump/**" />
            <!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 --> 
            <bean class="com.eolinker.interceptor.LoginInterceptor"/>     
        </mvc:interceptor> 
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 --> 
    </mvc:interceptors>

</beans>
